@inherits BlockView
@inject IJSRuntime JS
@inject NavigationManager NavigationManager
@inject LanguageManager LanguageManager
@inject VersionManager VersionManager
<a href="@BindUrl" title="@Title" target="_blank" @onclick="@OnLinkClick" @onclick:preventDefault="@PreventDefault">@Content</a>
@code {
    [Parameter]
    public string Url { get; set; }

    [Parameter]
    public string Title { get; set; }

    private bool PreventDefault
    {
        get
        {
            return Url.StartsWith('#') || (Url.StartsWith("/") && !Url.StartsWith("//"));
        }
    }

    private async Task OnLinkClick()
    {
        if (Url.StartsWith('#'))
        {
            await JS.InvokeVoidAsync("scrollToName", Url.Substring(1));
            NavigationManager.NavigateTo(NavigationManager.ToBaseRelativePath(NavigationManager.Uri).Split('#')[0] + Url, false, true);
        }
        else if (Url.StartsWith("/"))
        {
            var path = Url;
            if (LanguageManager.IsEnabled)
            {
                path = LanguageManager.Current.Value + path;
            }
            if (VersionManager.IsEnabled)
            {
                path += "?version=" + VersionManager.Current.Value;
            }
            NavigationManager.NavigateTo(path, false);
        }
    }

    private string BindUrl
    {
        get
        {
            if (Url.StartsWith('#'))
            {
                if (NavigationManager.Uri.Contains("#"))
                    return NavigationManager.Uri.Substring(0, NavigationManager.Uri.IndexOf('#')) + Url;
                else
                    return NavigationManager.Uri + Url;
            }
            else if (Url.StartsWith("/") && !Url.StartsWith("//"))
            {
                var path = Url;
                if (LanguageManager.IsEnabled)
                {
                    path = LanguageManager.Current.Value + path;
                }
                if (VersionManager.IsEnabled)
                {
                    path += "?version=" + VersionManager.Current.Value;
                }
                return path;
            }
            else
                return Url;
        }
    }

    private bool OnMatch(string url)
    {
        return false;
        //return !Url.StartsWith('#') && (Url.StartsWith("/") && !Url.StartsWith("//"));
    }
}